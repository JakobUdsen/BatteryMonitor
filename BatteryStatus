const int voltagePin = A0;      // Pin for voltage measurement
const int currentPin = A1;      // Pin for current measurement
const int sampleInterval = 100;   // Sample interval in milliseconds

struct BatteryData {
  int maxBatteryCapacity;
  int batteryCapacityLost;
  int voltage;
  int voltageMin;
  int voltageMax;
  int current;
  int remainingCapacity;
  int remainingTime;
};

BatteryData batteryData;
batteryData.maxBatteryCapacity = 5000;  // Maximum battery capacity in mAh
batteryData.batteryCapacityLost = 0;    // Capacity lost in mAh
unsigned long previousMillis = 0;
const unsigned long interval = 1000;

int getCurrentSample() {
  int currentRaw = analogRead(currentPin);
  return map(currentRaw, 0, 1023, 0, 5000) / 1000 - 5;
}

void updateBatteryData() {
  int voltageRaw = analogRead(voltagePin);
  batteryData.voltage = map(voltageRaw, 0, 1023, 0, 5000);
  batteryData.voltageMin = min(batteryData.voltage, batteryData.voltageMin);
  batteryData.voltageMax = max(batteryData.voltage, batteryData.voltageMax);
  batteryData.current = getCurrentSample();
  batteryData.remainingCapacity = batteryData.maxBatteryCapacity * (batteryData.voltage - 3700) / (4200 - 3700) - batteryData.batteryCapacityLost;
  batteryData.remainingTime = batteryData.remainingCapacity / batteryData.current;

  // Update the capacity lost
  int currentRemainingCapacity = batteryData.maxBatteryCapacity * (batteryData.voltage - 3700) / (4200 - 3700);
  batteryData.batteryCapacityLost = max(batteryData.batteryCapacityLost, batteryData.maxBatteryCapacity - currentRemainingCapacity);
}

void serialPrintBatteryData(unsigned long printInterval, bool printEnabled) {
  static unsigned long previousPrintMillis = 0;
  unsigned long currentPrintMillis = millis();
  if (printEnabled && currentPrintMillis - previousPrintMillis >= printInterval) {
    previousPrintMillis = currentPrintMillis;
    Serial.print("Voltage: ");
    Serial.print(batteryData.voltage);
    Serial.print("mV, Voltage Min: ");
    Serial.print(batteryData.voltageMin);
    Serial.print("mV, Voltage Max: ");
    Serial.print(batteryData.voltageMax);
    Serial.print("mV, Current: ");
    Serial.print(batteryData.current);
    Serial.print("A, Remaining Capacity: ");
    Serial.print(batteryData.remainingCapacity);
    Serial.print("mAh, Remaining Time: ");
    Serial.print(batteryData.remainingTime);
    Serial.println("h");
  }
}


void setup() {
  Serial.begin(9600);
  batteryData.voltageMin = 5000;
  batteryData.voltageMax = 0;
}

void loop() {
  static unsigned long previousMillis = 0;
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    updateBatteryData();
    serialPrintBatteryData(interval, true);
  }
}
